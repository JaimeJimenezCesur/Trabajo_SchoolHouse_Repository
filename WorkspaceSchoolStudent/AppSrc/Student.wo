Use cWebHttpHandler.pkg
Use cstudentDataDictionary.dd
Use cschoolhouseDataDictionary.dd

//  With the cWebHttpHandler you handle complete HTTP requests.
Object oStudent is a cWebHttpHandler
    Object oschoolhouse_DD is a cschoolhouseDataDictionary
    End_Object 

    Object ostudent_DD is a cstudentDataDictionary
        Set DDO_Server to oschoolhouse_DD
    End_Object 

    Set Main_DD to ostudent_DD
    //  The psPath property determines the path in the URL for which requests will be handled.
    Set psPath to "Studentlist"
    //  Use psVerbs to filter based on the HTTP Verbs. 
    Set psVerbs to "GET,POST"
    
    Procedure OnHttpGet String sPath String sAcceptType
        String[] aPath
        Integer iStucent
        
        //  Split the path into parts
        Get StrSplitToArray sPath "/" to aPath
        If (SizeOfArray(aPath) < 1) Begin
            Send StudentList
            Procedure_Return
        End
        
        //  Redirect to a specific operation based on the path
        If ((aPath[0]) = "") Begin
            If (SizeOfArray(aPath) = 2 and (Integer(aPath[1]) > 0)) Begin
                Send StudentInfo aPath[1]
            End
            Else Begin
                Send StudentList
            End
        End
        Else Begin
            Send SetResponseStatus 404 "Unknown resource" 
        End
    End_Procedure
    //------------------------
    //  Generate and output JSON for a single customer.
    Procedure StudentInfo String sKey
        Handle hoJson
        
        Send Clear of ostudent_DD
        Move sKey to student.ID
        Send Find of ostudent_DD EQ 1
        
        If (Found) Begin
            Get Create (RefClass(cJsonObject)) to hoJson
            Send InitializeJsonType of hoJson jsonTypeObject
            
            Send SetMemberValue of hoJson "ID"                  jsonTypeInteger student.ID
            Send SetMemberValue of hoJson "Name"                jsonTypeString (Trim(student.Name))
            Send SetMemberValue of hoJson "LastName"            jsonTypeString (Trim(student.LastName))
            Send SetMemberValue of hoJson "DNI"                 jsonTypeString (Trim(student.DNI))
            Send SetMemberValue of hoJson "Email"               jsonTypeString (Trim(student.Email))
            Send SetMemberValue of hoJson "County"              jsonTypeString (Trim(student.County))
            Send SetMemberValue of hoJson "City"                jsonTypeString (Trim(student.City))
            Send SetMemberValue of hoJson "Address"             jsonTypeString student.Address
            Send SetMemberValue of hoJson "Birthday"            jsonTypeString student.Birthday
            Send SetMemberValue of hoJson "SchoolHouseID"       jsonTypeString schoolhouse.ID
            Send SetMemberValue of hoJson "Notes"               jsonTypeString student.Notes
            
            Send OutputJson hoJson
            Send Destroy of hoJson
        End
        Else Begin
            Send SetResponseStatus 404 "Resource not found"
        End
    End_Procedure
    //------------------------
    //  Helper function that generates a response based on a JSON object.
    Procedure OutputJson Handle hoJson
        UChar[] ucData
        
        Send AddHttpResponseHeader "Content-Type" "application/json"
        Get StringifyUtf8 of hoJson to ucData
        Send OutputUChar ucData
    End_Procedure
    //------------------------
    //  Generate and output JSON with a list of all customers
    Procedure StudentList
        Handle hoJson
        Handle hoStudent
        
        Get Create (RefClass(cJsonObject)) to hoJson
        Send InitializeJsonType of hoJson jsonTypeArray
        
        Get Create (RefClass(cJsonObject)) to hoStudent
        
        Send Find of ostudent_DD FIRST_RECORD 1
        While (Found)
            Send InitializeJsonType of hoStudent jsonTypeObject
            
            Send SetMemberValue of hoStudent "ID"                   jsonTypeInteger student.ID
            Send SetMemberValue of hoStudent "Name"                 jsonTypeString (Trim(student.Name))
            Send SetMemberValue of hoStudent "LastName"             jsonTypeString (Trim(student.LastName))
            Send SetMemberValue of hoStudent "DNI"                  jsonTypeString (Trim(student.DNI))
            Send SetMemberValue of hoStudent "SchoolHouse Name"     jsonTypeString (Trim(schoolhouse.Name))
            
            Send AddMember of hoJson hoStudent
            
            Send Find of ostudent_DD NEXT_RECORD 1
        Loop
        
        Send OutputJson hoJson
        
        Send Destroy of hoStudent
        Send Destroy of hoJson
    End_Procedure
    //------------------------
        Procedure OnHttpPost String sPath String sContentType String sAcceptType Integer iSize
        String[] aPath
        
        //  Split the path into parts
        Get StrSplitToArray sPath "/" to aPath
        If (SizeOfArray(aPath) < 1) Begin
            Send SetResponseStatus 404 "Invalid resource" 
            Procedure_Return
        End
        
        //  Redirect to a specific operation based on the path
        If (Lowercase(aPath[0]) = "") Begin
            If (SizeOfArray(aPath) = 2 and ((aPath[1]) = "new")) Begin
                Send SaveStudent True ""
            End
            Else Begin
                Send SetResponseStatus 400 "Only use POST for creating new resources"
            End
        End
        Else Begin
            Send SetResponseStatus 404 "Unknown resource"
        End
    End_Procedure
    //------------------------
    //  Saves an existing customer based on the data posted
    Procedure SaveStudent Boolean bCreate String sKey
        Handle hoJson
        Boolean bSuccess
        String sVal
        Boolean bVal bErr
        
        //  Find the right record
        If (bCreate) Begin
            Send Clear of ostudent_DD
        End
        Else Begin
            Send Clear of ostudent_DD
            Move sKey to student.ID
            Send Find of ostudent_DD EQ 1
            
            If (not(Found)) Begin
                Send SetResponseStatus 404 "Resource not found"
                Procedure_Return
            End
        End
        
        //  Read the request data
        Get RequestDataJson (&hoJson) to bSuccess
        
        If (bSuccess) Begin
            Send ErrorQueueStart
            
            //  Set the values
            If (HasMember(hoJson, "Name")) Begin
                Get MemberValue of hoJson "Name" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.Name)) to sVal
            End
            If (HasMember(hoJson, "LastName")) Begin
                Get MemberValue of hoJson "LastName" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.LastName)) to sVal
            End
            If (HasMember(hoJson, "DNI")) Begin
                Get MemberValue of hoJson "DNI" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.DNI)) to sVal
            End
            If (HasMember(hoJson, "County")) Begin
                Get MemberValue of hoJson "County" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.County)) to sVal
            End
            
            If (HasMember(hoJson, "Email")) Begin
                Get MemberValue of hoJson "Email" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.Email)) to sVal
            End
            
            If (HasMember(hoJson, "City")) Begin
                Get MemberValue of hoJson "City" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.City)) to sVal
            End
            
            If (HasMember(hoJson, "Address")) Begin
                Get MemberValue of hoJson "Address" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.Address)) to sVal
            End
            
            If (HasMember(hoJson, "SchoolHouseID")) Begin
                Get MemberValue of hoJson "SchoolHouseID" to sVal
                Send Clear of oschoolhouse_DD
                Move sVal to schoolhouse.ID
                Send Find of oschoolhouse_DD EQ 1
            End
            
            If (HasMember(hoJson, "Notes")) Begin
                Get MemberValue of hoJson "Notes" to sVal
                Set Field_Changed_Value of ostudent_DD (RefTable(student.Notes)) to sVal
            End
            
            //  Perform the save
            If (ErrorCount(Self) = 0) Begin
                Get Request_Validate of ostudent_DD to bErr
                If (not(bErr)) Begin
                   Send Request_Save of ostudent_DD
                   
                   If (not(Err)) Begin
                        Send StudentInfo student.ID
                   End
                End
                Else Begin
                    Send SetResponseStatus 404 "Invalid resource" 
                End
            End            
            
            Send ErrorQueueEnd
            Send ErrorReportJson
        End
        
        If (hoJson > 0) Begin
            Send Destroy of hoJson
        End
    End_Procedure
    //  Helper function that reads an entire request into a JSON object.
    Function RequestDataJson Handle ByRef hoJson Returns Boolean
        UChar[] ucData
        Boolean bSuccess
        String sErr
        
        Get Create (RefClass(cJsonObject)) to hoJson
        
        Get RequestDataUChar -1 to ucData
        Get ParseUtf8 of hoJson ucData to bSuccess
        
        If (not(bSuccess)) Begin
            Get psParseError of hoJson to sErr
            Send SetResponseStatus 400 sErr
        End
        
        Function_Return bSuccess
    End_Function
    //  Helper function that reports all errors on the error queue in JSON format.
    Procedure ErrorReportJson
        Integer iErr iErrC
        Handle hoJson hoErrors   
        String sMessage
        
        Get ErrorCount to iErrC
        If (iErrC > 0) Begin
            Send SetResponseStatus 400 "Errors occurred"
            
            Get Create (RefClass(cJsonObject)) to hoJson
            Send InitializeJsonType of hoJson jsonTypeObject
            
            Get Create (RefClass(cJsonObject)) to hoErrors
            Send InitializeJsonType of hoErrors jsonTypeArray
            
            For iErr from 0 to (iErrC - 1)
                Get ErrorMessage iErr to sMessage
                Send AddMemberValue of hoErrors jsonTypeString  sMessage
            Loop
            
            Send SetMember of hoJson "aErrors" hoErrors
            
            Send OutputJson hoJson
            
            Send Destroy of hoErrors
            Send Destroy of hoJson
        End
    End_Procedure
    
End_Object
